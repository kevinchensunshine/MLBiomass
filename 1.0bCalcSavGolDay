/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var s2 = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED"),
    grids = ee.FeatureCollection("users/kevinlc3/Denmark_Full_Grids");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var folder_path = "users/kevinlc3/DenmarkStudy/";
var filename_base = "wheatfields_tile";
var imagecollection_dest_path = 'users/kevinlc3/savgol_daygen_demo'
var denmark_bound = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017')
            .filter(ee.Filter.eq('country_na', 'Denmark')).geometry();

var gpp_utils = require('users/kevinlc3/ndvi_nir_collection:Utils/GPP_Processing_Lib');
var batch = require('users/fitoprincipe/geetools:batch')

function maskS2clouds(image) {
  var qa = image.select('QA60');
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
            .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask).divide(10000)
              .copyProperties(image, ['system:time_start','system:time_end']);
}

function addNDVI(image) {
  // Compute NDVI
  var ndvi = image.normalizedDifference(['B8', 'B4']).rename('NDVI');
  // Add NIRv as a new band to the image
  return image.addBands(ndvi);
}

function formatDate(feature) {
  return ee.Date(feature.get('system:time_start')).format('YYYY-MM-dd');
}

var root = ee.data.getAssetRoots()[0]['id']
var imagecollectiondownload = function(collection, assetFolder, tileno) {
  var folder = assetFolder
  if (folder !== null && folder !== undefined) {
    var assetFolder = root+'/'+folder+'/'
  } else {
    var assetFolder = root+'/'
  }
    
  var v = 11
    
  var colList = collection.toList(v);
  
  for (var i = 0; i < v; i++) {
    var img = ee.Image(colList.get(i));
    var id = 'denmark_image_tile'+ i.toString() + '_' + tileno.toString();
    var assetId = assetFolder+id
    
    Export.image.toAsset({
      image: img,
      description: id,
      assetId: assetId
    })
  }
}

var startDate_one = ee.Date('2018-09-01')
var endDate_one = ee.Date('2018-12-31')
var day_of_interest = '2018-10-01'

//##############################################################
// Step-1: Prepare a NDVI time-series
//##############################################################
var len = grids.size().getInfo();
var stride = Math.floor(len / 11);
var batch_list = grids.toList(len);

for (var i = 0; i < len; i += stride) {
  
  var end = i + stride;
  if (end > len) {
      end = len;
  }
  var geometry = ee.FeatureCollection(batch_list.slice(i, end)).geometry().dissolve();
  
  var bands = ['B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B8A', 'B11', 'B12', 'NDVI'];
  
  var filtered_one = s2
    .filter(ee.Filter.date(startDate_one, endDate_one))
    .filter(ee.Filter.bounds(geometry))
  
  var filtered_one = filtered_one.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
                    .map(maskS2clouds)
                    .map(addNDVI)
  var filtered_s2images = filtered_one.select(bands);
  
  //##############################################################
  // Step-2: Apply an SGFilter
  //##############################################################
  
  // Select the interval. We will have 1 image every n days
  var n = 1
  
  var interpolatedCol = gpp_utils.interpolateCollection(filtered_s2images, n, geometry).select(bands)
  
  //##############################################################
  // Step-5: Apply Savitzky-Golay filter
  //##############################################################
  
  var order = 5
  var smoothed = gpp_utils.applySGFilter(interpolatedCol, order)
  
  // Select the d_0_ndvi band and rename it
  var d_0_bands = ['d_0_B2',
                    'd_0_B3', 
                    'd_0_B4', 
                    'd_0_B5',
                    'd_0_B6',
                    'd_0_B7',
                    'd_0_B8',
                    'd_0_B8A',
                    'd_0_B11',
                    'd_0_B12', 
                    'd_0_NDVI'];
                    
  var smoothed_bands = ['smoothed_B2',
                    'smoothed_B3', 
                    'smoothed_B4', 
                    'smoothed_B5',
                    'smoothed_B6',
                    'smoothed_B7',
                    'smoothed_B8',
                    'smoothed_B8A',
                    'smoothed_B11',
                    'smoothed_B12', 
                    'smoothed_NDVI'];
  
  var smoothed = smoothed.select(d_0_bands, smoothed_bands)
  //##############################################################
  // Step-6: Visualize the results
  //##############################################################
  var image_of_interest = smoothed.filterDate(day_of_interest, ee.Date(day_of_interest).advance(1, 'day')).first()
  
  Export.image.toAsset({
    image: image_of_interest,
    description: "Day_Generation_SavGol_" + day_of_interest,
    assetId: imagecollection_dest_path + '/' + day_of_interest + '_' + i
  })
}