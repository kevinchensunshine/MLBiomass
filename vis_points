/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var imageCollection = ee.ImageCollection("users/kevinlc3/points_smoothed_2019"),
    imageCollection2 = ee.ImageCollection("users/kevinlc3/points_smoothed_2020"),
    s2 = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var gpp_utils = require('users/kevinlc3/ndvi_nir_collection:Utils/GPP_Processing_Lib');

function maskS2clouds(image) {
  var qa = image.select('QA60');
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
            .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask).divide(10000)
              .copyProperties(image, ['system:time_start','system:time_end']);
}

function addNDVI(image) {
  // Compute NDVI
  var ndvi = image.normalizedDifference(['B8', 'B4']).rename('NDVI');
  // Add NIRv as a new band to the image
  return image.addBands(ndvi);
}

var startDate_one = ee.Date('2019-09-01')
var endDate_one = ee.Date('2019-12-31')
s2 = s2.filterDate(startDate_one, endDate_one)

var geometry = geolocated_points.geometry().dissolve();

var bands = ['B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B8A', 'B11', 'B12', 'NDVI'];

var filtered_one = s2.filterBounds(geometry)

filtered_one = filtered_one.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
                  .map(maskS2clouds)
                  .map(addNDVI)
var filtered_s2images = filtered_one.select(bands);

//##############################################################
// Step-2: Apply an SGFilter
//##############################################################

// Select the interval. We will have 1 image every n days
var n = 1

var interpolatedCol = gpp_utils.interpolateCollection(filtered_s2images, n, geometry).select(bands)

//##############################################################
// Step-5: Apply Savitzky-Golay filter
//##############################################################

var order = 5
var smoothed = gpp_utils.applySGFilter(interpolatedCol, order)

// Select the d_0_ndvi band and rename it
var d_0_bands = ['d_0_B2',
                  'd_0_B3', 
                  'd_0_B4', 
                  'd_0_B5',
                  'd_0_B6',
                  'd_0_B7',
                  'd_0_B8',
                  'd_0_B8A',
                  'd_0_B11',
                  'd_0_B12', 
                  'd_0_NDVI'];
                  
var smoothed_bands = ['smoothed_B2',
                  'smoothed_B3', 
                  'smoothed_B4', 
                  'smoothed_B5',
                  'smoothed_B6',
                  'smoothed_B7',
                  'smoothed_B8',
                  'smoothed_B8A',
                  'smoothed_B11',
                  'smoothed_B12', 
                  'smoothed_NDVI'];

smoothed = smoothed.select(d_0_bands, smoothed_bands).filterDate('2019-10-14', '2019-11-05')
imagecollectiondownload(smoothed, "points_smoothed_2019", 0)
//##############################################################
// Step-6: Visualize the results + Postprocessing
//##############################################################


Map.addLayer(smoothed)
