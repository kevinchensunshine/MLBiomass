/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var points2019 = ee.ImageCollection("users/kevinlc3/points_smoothed_2019"),
    points2020 = ee.ImageCollection("users/kevinlc3/points_smoothed_2020"),
    s2 = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var gpp_utils = require('users/kevinlc3/ndvi_nir_collection:Utils/GPP_Processing_Lib');

function maskS2clouds(image) {
  var qa = image.select('QA60');
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
            .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask).divide(10000)
              .copyProperties(image, ['system:time_start','system:time_end']);
}

function addNDVI(image) {
  // Compute NDVI
  var ndvi = image.normalizedDifference(['B8', 'B4']).rename('NDVI');
  // Add NIRv as a new band to the image
  return image.addBands(ndvi);
}

var startDate_one = ee.Date('2019-09-01')
var endDate_one = ee.Date('2019-12-31')
s2 = s2.filterDate(startDate_one, endDate_one)

var geometry = points2019.geometry().dissolve();

var bands = ['B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B8A', 'B11', 'B12', 'NDVI'];

var filtered_one = s2.filterBounds(geometry)

filtered_one = filtered_one.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
                  .map(maskS2clouds)
                  .map(addNDVI)
var filtered_s2images = filtered_one.select(bands);

print(Chart.image.series(filtered_s2images.select('NDVI'), geometry, ee.Reducer.median(), 60)
    .setOptions({
      title: 'NDVI Original',
      lineWidth: 1,
      pointSize: 3,
      maxPixels: 74223793
}));

print(Chart.image.series(points2019.select('smoothed_NDVI'), geometry, ee.Reducer.median(), 60)
    .setOptions({
      title: 'NDVI Smoothed',
      lineWidth: 1,
      pointSize: 3,
      bestEffort: 74223793
}));